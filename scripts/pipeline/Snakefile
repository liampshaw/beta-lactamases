GENES = ["CMY",\
			"CTX-M",\
			"GES",\
			"IMP",\
			"KPC",\
			"NDM",\
			"PER",\
			"SHV",\
			"TEM",\
			"VEB",\
			"VIM"]
DB = ["NCBI", "CARD"]

FOCAL_GENES = ["CMY-2"]#,"GES-24","CTX-M-15","CTX-M-65","GES-24","IMP-1","KPC-2","NDM-1","PER-1","SHV-134","TEM-1","VIM-1"]

rule all:
	input:
		expand("DB/plots/{db}-variants/{gene}.pdf", gene=GENES, db=DB),
		expand("DB/dists/{gene}_{db}.tsv", gene=GENES, db=DB),
		expand("analysis/sequence_assignments/{focal_gene}_{db}.csv", focal_gene=FOCAL_GENES, db=DB),
		expand("data/{db}_db.fa", db=DB)	

rule download_NCBI_DB:
	output:
		"data/NCBI_db.fa"
	shell:
		"wget https://ftp.ncbi.nlm.nih.gov/pathogen/Antimicrobial_resistance/AMRFinderPlus/database/3.11/2022-12-19.1/AMR_CDS -O {output}"

rule download_CARD_DB:
	output:
		"data/CARD_db.fa"
	run:
		shell("wget https://card.mcmaster.ca/download/0/broadstreet-v3.2.6.tar.bz2")
		shell("tar -xvf broadstreet-v3.2.6.tar.bz2 ./nucleotide_fasta_protein_homolog_model.fasta")
		shell("rm broadstreet-v3.2.6.tar.bz2")
		shell("mv nucleotide_fasta_protein_homolog_model.fasta {output}")

rule extract_genes_DB:
	input:
		fasta="data/{db}_db.fa"
	params:
		gene_name="{gene}",
		db="{db}"
	output:
		"DB/fasta/{gene}_{db}.fa"
	shell:
		"python scripts/extract_gene_DB.py {input.fasta} {params.gene_name} {params.db} {output}"

rule align_genes_DB:
	input:
		"DB/fasta/{gene}_{db}.fa"
	output:
		"DB/alns/{gene}_{db}.aln"
	shell:
		"mafft --auto {input} > {output}"

rule snp_dists_DB:
	input:
		"DB/alns/{gene}_{db}.aln"
	output:
		"DB/dists/{gene}_{db}.tsv"
	shell:
		"snp-dists -a -b {input} > {output}"

rule run_fasttree_DB:
	input:
		"DB/alns/{gene}_{db}.aln"
	output:
		"DB/trees/{gene}_{db}.nwk"
	shell:
		"FastTree -nt -gtr {input} > {output}"

rule refine_fasttree_DB:
	input:
		tree= "DB/trees/{gene}_{db}.nwk",
		aln= "DB/alns/{gene}_{db}.aln"
	output:
		"DB/refined-trees/{gene}_{db}.nwk"
	shell:
		"python scripts/refine_tree.py --tree_in {input.tree} --aln {input.aln} --tree_out {output}"

rule plot_tree_DB:
	input:
		"DB/refined-trees/{gene}_{db}.nwk"
	output:
		"DB/plots/{db}-variants/{gene}.pdf"
	shell:
		"Rscript scripts/plot_tree.R {input} {output}"

rule run_metadata:
	input:
		metadata="data/metadata.csv"
	script:
		"scripts/metadata_gene_combinations.py"

# rule combine_fasta_files:
# 	input:

# rule split_focal_genes:
# 	input:
# 		"data/focal_genes.fasta"
# 	# params:
# 	# 	gene_name="{focal_gene}"
# 	# output:
# 	# 	"data/focal_genes/{focal_gene}.fa"
# 	shell:
# 		"python scripts/split_fasta.py --fasta {input} --outdir data/focal_genes/"


rule extract_genes_from_contigs:
	input:
		gene_fasta="data/focal_genes/{focal_gene}.fa",
		input_fasta="test_{focal_gene}.fa"
	output:
		"analysis/sequence/{focal_gene}.fa"
	shell:
		"python scripts/extract_region_around_gene.py --gene {input.gene_fasta} --input_fasta {input.input_fasta} --output_fasta {output} --upstream 0 --downstream 0"

#Would be good to compute the actual SNP distances to the focal gene, so that can be used for 
#selecting those for further analysis

rule name_observed_genes:
	input:
		fasta="analysis/sequence/{focal_gene}.fa",
		variants="DB/fasta/{focal_gene}_{db}.fa"
	output:
		"analysis/sequence_assignments/{focal_gene}_{db}.csv"
	shell:
		"python scripts/name_variants.py --variant_fasta {input.variants} --output_file {output} --input_fasta {input.fasta}"



